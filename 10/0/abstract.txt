However to do so agent plans must be capable of representing the myriad of actions and control flows required to perform those tasks In addition since these tasks can require integrating multiple sources of remote information  typically a slow IObound process  it is desirable to make execution as efficient as possible To address both of these needs we present a flexible software agent plan language and a highly parallel execution system that enable the efficient execution of expressive agent plans The plan language allows complex tasks to be more easily expressed by providing a variety of operators for flexibly processing the data as well as supporting subplans  and recursion  The executor is based on a streaming dataflow model of execution to maximize the amount of operator and data parallelism possible at runtime We have implemented both the language and executor in a system called THESEUS Our results from testing THESEUS show that streaming dataflow execution can yield significant speedups over both traditional serial  as well as nonstreaming dataflowstyle execution that existing software and robot agent execution systems currently support In addition we show how plans written in the language we present can represent certain types of subtasks that cannot be accomplished using the languages supported by network query engines Finally we demonstrate that the increased expressivity of our plan language does not hamper performance specifically we show how data can be integrated from multiple remote sources just as efficiently using our architecture as is possible with a stateoftheart streamingdataflow network query engine 1 Introduction The goal of software agents is to automate tasks that require interacting with one or more accessible software systems Furthermore the Web is ripe for such automation  given the sheer number of online applications and the complete lack of coordination between them agents could address an endless list of needs and problems to be solved for people that do use the Web for practical purposes Furthermore like other software agent domains Web tasks vary widely in complexity and by definition involve routing and processing information as part of the task In this paper we describe a software agent plan language and execution system that enables one to express a wide range of tasks as a software agent plan and then to have that plan be efficiently executed We have implemented both the language and the executor in a system called THESEUS Throughout this paper we will discuss THESEUS in the context of Web information gathering and processing since the Web represents a domain where most  of the challenges that software agents face can be found 11 Web Information Agents The degree of complexity in gathering information from the Web varies significantly Some types of tasks can be accomplished manually because the size of the data gathered is small or the need to query is infrequent For example finding the address of a restaurant or a theater in a particular city using a Yellow Pages type of Web site is easy enough for people to do themselves It does not need to be automated since the query need only be done once and the result returned is small and easy to manage However not all information gathering tasks are as simple There are often times when the amount of data involved is large or the answer requires integrating data from multiple sites or the answer requires multiple queries over a period of time For example consider shopping for an expensive product over a period of time using multiple sources that are each updated daily Such tasks can become quickly tedious and require a greater amount of manual work making them very desirable to automate 111 MORE One type of difficult Web information gathering task involves interleaved gathering and navigation For the benefit of people that use a Web browser to access online data many Web sources display large sets of query results spread over a series of web pages connected through Next Page links For example querying an online classified listings source for automobiles for sale can generate many results Instead of displaying the results on a single very long Web page many classified listings sites group sets of results over series of hyperlinked pages In order to automatically collect this data a system needs to interleave navigation and gathering an